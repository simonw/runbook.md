service: biz-ops-runbook-md

provider:
    name: aws
    stackTags:
        description: Automated import of runbook content from github runbook.md
        systemCode: ${self:service}
        teamDL: reliability.engineering@ft.com
        environment: ${env:ENVIRONMENT_TAG}
    runtime: nodejs8.10
    stage: ${opt:stage, 'test'}
    region: eu-west-1
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/FTApplicationRoleFor_biz-ops-runbook-md
    timeout: 30
    deploymentBucket: artefacts.biz-ops-runbook-md.${env:AWS_ACCOUNT_ID}
    environment:
        GITHUB_APP_ID: ${env:GITHUB_APP_ID}
        BIZ_OPS_API_URL: ${env:BIZ_OPS_API_URL}
        BIZ_OPS_API_KEY: ${env:BIZ_OPS_API_KEY}
        BIZ_OPS_URL: ${env:BIZ_OPS_URL}
        BASE_HOST: ${env:BASE_HOST}
        BASE_URL: ${env:BASE_URL}
        SCHEMA_BASE_URL: ${env:SCHEMA_BASE_URL}
        SOS_URL: ${env:SOS_URL}
        AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
        CONSOLE_LOG_LEVEL: info
        ENVIRONMENT: ${env:ENVIRONMENT}
        NODE_ENV: ${self:custom.${self:provider.stage}.NODE_ENV, 'production'}
        GITHUB_PRIVATE_KEY_STRING: ${env:GITHUB_PRIVATE_KEY_STRING}
        STAGE: ${self:provider.stage}
        SYSTEM_CODE: ${self:service}
        GITHUB_WEBHOOK_SECRET: ${env:GITHUB_WEBHOOK_SECRET}

custom:
    alerts:
        topics:
            ok: arn:aws:sns:${self:provider.region}:${env:AWS_ACCOUNT_ID}:cloudwatch-alarms
            alarm: arn:aws:sns:${self:provider.region}:${env:AWS_ACCOUNT_ID}:cloudwatch-alarms
        global:
            - functionErrors

    logForwarding:
        destinationARN: ${cf:aws-composer-auditing-global-stack.SplunkCloudIndexerLambdaarn}
        filterPattern: '-"RequestId: "'
        stages:
            - test
            - prod

    serverless-offline:
        dontPrintOutput: true
        prefix: ''
        host: local.in.ft.com
        port: ${env:PORT, '3000'}
        noTimeout: true

    serverless-offline-kinesis:
        endpoint: http://0.0.0.0:4567
        region: ${self:provider.region}
        skipCacheInvalidation: false

    webpack:
        webpackConfig: 'webpack.server.config.js'
        includeModules: true
        packager: 'npm'
        excludeFiles: test/*
        keepOutputDirectory: true

functions:
    form:
        description: GUI for driving ingestion of a runbook.md
        handler: lambdas/ingester/src/formHandler.handler
        timeout: 30
        events:
            - http:
                  path: /runbook.md
                  method: get
            - http:
                  path: /runbook.md
                  method: post
    releaseLog:
        description: Apply runbook.md changes on prod release
        handler: lambdas/ingester/src/releaseLogHandler.handler
        timeout: 30
        events:
            - stream:
                  type: kinesis
                  batchSize: 100
                  arn: arn:aws:kinesis:eu-west-1:510688331160:stream/change-request-api-test-enriched-stream
                  startingPosition: TRIM_HORIZON
                  enabled: true
    status:
        description: Status page for GitHub checks
        handler: lambdas/ingester/src/statusPageHandler.handler
        timeout: 30
        events:
            - http:
                  path: /runbook.md/status/{owner}/{repo}/{hash}
                  method: get
    githubWebhook:
        description: GitHub webhook responder
        handler: lambdas/ingester/src/githubWebhookHandler.handler
        timeout: 30
        events:
            - http:
                  path: /webhook
                  method: post

plugins:
    - serverless-plugin-aws-alerts
    - serverless-log-forwarding
    - serverless-webpack
    - serverless-offline-kinesis
    - serverless-offline

package:
    exclude:
        - certs/**
        - coverage/**
        - test/**
        - .circleci/**
        - cdn/**
        - terraform.tfstate
        - terraform.tfstate.backup
        - .terraform/**
        - .biz-ops
        - bin/**
        - scripts
